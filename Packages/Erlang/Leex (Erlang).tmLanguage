<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>xrl</string>
	</array>
	<key>name</key>
	<string>Leex (Erlang)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#definitions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#rules</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#erlang-code</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>begin</key>
			<string>(%)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.erlang</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.leex</string>
		</dict>
		<key>definitions</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)(Definitions)(\s*)(\.)\s*((?:\s*[^\s]+\s*)*)$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-before-directive.leex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.directive.definitions.leex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-in-directive.leex</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.directive.end.leex</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.characters-after-directive.leex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?=\s*Rules\s*\.)</string>
			<key>name</key>
			<string>meta.section.definitions.leex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*([A-Z_][A-Za-z0-9_]*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.macro.definition.leex</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.definition.leex</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.definition-no-whitespace.leex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.definition.leex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\s*(=)(?:(?:\s+)|([^\s]))</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.definition.leex</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.definition-no-whitespace.leex</string>
								</dict>
							</dict>
							<key>end</key>
							<string>$</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#regular-expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.macro-definition.leex</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^((?:\s*[^\s%]+)+)%?</string>
				</dict>
			</array>
		</dict>
		<key>erlang-code</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)(Erlang (\s*)code)(\s*)(\.)\s*((?:\s*[^\s]+\s*)*)$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-before-directive.leex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.directive.rules.leex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-in-directive.leex</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-in-directive.leex</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.directive.end.leex</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.characters-after-directive.leex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!)</string>
			<key>name</key>
			<string>meta.section.code.leex source.erlang</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.erlang</string>
				</dict>
			</array>
		</dict>
		<key>invalid-regexp-whitespace</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.pattern-whitespace.leex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\s+)(?=[^\s:]+)</string>
		</dict>
		<key>regexp-escape-sequence</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{3}</string>
					<key>name</key>
					<string>constant.character.escape.octal.regexp.leex</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.character.escape.hex.regexp.leex</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.hex.regexp.leex</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\\x\{(?:(?:[0-9a-fA-F]*)|([^}]*))\}</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.regexp.leex</string>
				</dict>
			</array>
		</dict>
		<key>regexp-macro-usage</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.macro-usage.regexp.leex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.macro.leex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.macro-usage.regexp.leex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\{)([A-Z_][A-Za-z0-9_]*)(\})</string>
		</dict>
		<key>regular-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regexp-escape-sequence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp-macro-usage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid-regexp-whitespace</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.alternation.regexp.leex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.anychar.regexp.leex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+|\*|\?)</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp.leex</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.begin.regexp.leex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.end.regexp.leex</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.regexp.leex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regular-expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.begin.regexp.leex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.end.regexp.leex</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.character-class.regexp.leex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp-escape-sequence</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regexp-macro-usage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#invalid-regexp-whitespace</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=\[)\^</string>
							<key>name</key>
							<string>punctuation.other.character-class.negate.regexp.leex</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.other.character-class.range.regexp.leex</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;!\[)(-)(?!\])</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>string.leex</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>.</string>
					<key>name</key>
					<string>string.leex</string>
				</dict>
			</array>
		</dict>
		<key>rules</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)(Rules)(\s*)(\.)\s*((?:\s*[^\s]+\s*)*)$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-before-directive.leex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.directive.rules.leex</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.whitespace-in-directive.leex</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.directive.end.leex</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.characters-after-directive.leex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?=\s*Erlang\s+code\s*\.)</string>
			<key>name</key>
			<string>meta.section.rules.leex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=.)</string>
					<key>end</key>
					<string>(\.)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.rule.end.leex</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.rule.leex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>^</string>
							<key>end</key>
							<string>\s</string>
							<key>name</key>
							<string>meta.pattern.leex</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#regular-expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.pattern-whitespace.leex</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?&lt;=\s)([^\s:]+)\s+</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.rule.head-body.leex</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\.)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.erlang.expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.leex</string>
</dict>
</plist>
